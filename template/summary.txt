We present a unique protocol for private communications over a public messaging layer like a blockchain. By combining traditional encrypted messaging techniques with the properties of blockchains, like censorship-resistance and high availability, we address the issue of metadata exposure in digital communications. While popular encrypted messaging services like WhatsApp, Signal, and Telegram protect message content, they still expose metadata such as sender and/or receiver identities, timestamps, and communication frequency, if not to the public, at least to the centralized services which can be compromised or subpoenaed. Metadata can be as revealing as the message content itself, making it a critical privacy concern. We propose Flexible Channels, a novel protocol designed to enhance privacy by minimizing metadata leakage while leveraging blockchain technology for secure and decentralized messaging.

At its core, Flexible Channels introduces a system of encrypted message streams, called channels, which prevent outside observers from linking messages to specific users. Each message in a channel is associated with a sequence hash: a deterministic identifier derived from a shared secret and sequential nonce, such that parties privy to the shared secret can calculate the same sequence of hashes. All messages are stored in a public message repository, which acts like an append-only key-value store. To prevent metadata leaks, the protocol incorporates several techniques: garbage messages (fake messages that obscure real traffic patterns), payload size normalization (ensuring all messages are the same size to prevent tracking based on payload size patterns), and Dandelion-style routing (a proxy-based system that anonymizes message origins, similar to Tor).

Network activity can reveal general patterns in user behavior which can later be used to infer identities. Such network activity is not limited merely to that pertaining to sending messages, but also to receiving. For instance, a user who consistently requests a specific, as-of-yet-nonexistent sequence hash from a repository would be a likely candidate as the recipient should such a message arrive. Flexible Channels mitigates this by introducing a message notification filter, based on a Bloom filter, which allows users to download a single payload to check for new messages "offline," without revealing which messages they are interested in.

Overall, Flexible Channels presents a novel approach to private communication using public infrastructure like blockchains to minimize the amount of metadata revealed, and obfuscating that which cannot be elided. However, challenges remain in terms of efficiency and scalability, making it an solution that requires further exploration and refinement before it can be recommended in non-experimental settings.
